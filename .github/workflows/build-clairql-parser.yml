name: Release clairql-parser

on:
    push:
        branches:
            - master
    pull_request:
        paths:
            - clairql_parser/**
            - .github/workflows/build-clairql-parser.yml

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    check-version:
        name: Check version legitimacy
        runs-on: ubuntu-22.04
        outputs:
            parser-release-needed: ${{ steps.version.outputs.parser-release-needed }}
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Fetching all for comparison since last push (not just last commit)

            - name: Check if clairql_parser/ has changed
              id: changed-files
              uses: tj-actions/changed-files@v43
              with:
                  since_last_remote_commit: true
                  files_yaml: |
                      parser:
                      - clairql_parser/**

            - name: Check if version was bumped
              shell: bash
              id: version
              run: |
                  parser_release_needed='false'
                  if [[ ${{ steps.changed-files.outputs.parser_any_changed }} == 'true' ]]; then
                    published=$(curl -fSsl https://pypi.org/pypi/clairql-parser/json | jq -r '.info.version')
                    local=$(python clairql_parser/setup.py --version)
                    if [[ "$published" != "$local" ]]; then
                      parser_release_needed='true'
                    else
                      message_body="It looks like the code of \`clairql-parser\` has changed since last push, but its version stayed the same at $local. ðŸ‘€\nMake sure to resolve this in \`clairql_parser/setup.py\` before merging!${{ github.event.pull_request.head.repo.full_name != 'ClairView/clairview' && '\nThis needs to be performed on a branch created on the ClairView/clairview repo itself. A ClairView team member will assist with this.' || ''}}"
                      curl -s -u clairview-bot:${{ secrets.API_TOKEN_GH || secrets.GITHUB_TOKEN }} -X POST -d "{ \"body\": \"$message_body\" }" "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
                    fi
                  fi
                  echo "parser-release-needed=$parser_release_needed" >> $GITHUB_OUTPUT

    build-wheels:
        name: Build wheels on ${{ matrix.os }}
        needs: check-version
        runs-on: ${{ matrix.os }}
        timeout-minutes: 30
        if: needs.check-version.outputs.parser-release-needed == 'true' &&
            github.event.pull_request.head.repo.full_name == 'ClairView/clairview'
        strategy:
            matrix:
                # As of October 2023, GitHub doesn't have ARM Actions runnersâ€¦ and ARM emulation is insanely slow
                # (20x longer) on the Linux runners (while being reasonable on the macOS runners). Hence, we use
                # BuildJet as a provider of ARM runners - this solution saves a lot of time and consequently some money.
                os: [ubuntu-22.04, buildjet-2vcpu-ubuntu-2204-arm, macos-12]

        steps:
            - uses: actions/checkout@v4

            - if: ${{ !endsWith(matrix.os, '-arm') }}
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11'

            # Compiling Python 3.11 from source on ARM. We tried using the "deadsnakes" ARM repo, but it was flakey.
            - if: ${{ endsWith(matrix.os, '-arm') }}
              name: Install Python 3.11 on ARM (compile from source)
              run: |
                  sudo apt-get update
                  sudo apt-get install -y build-essential libssl-dev zlib1g-dev \
                  libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev \
                  libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev tk-dev
                  wget https://www.python.org/ftp/python/3.11.0/Python-3.11.0.tar.xz
                  tar -xf Python-3.11.0.tar.xz
                  cd Python-3.11.0
                  ./configure --enable-optimizations
                  make -j 2
                  sudo make altinstall

            - name: Build sdist
              if: matrix.os == 'ubuntu-22.04' # Only build the sdist once
              run: cd clairql_parser && python setup.py sdist

            - name: Install cibuildwheel
              run: pip install cibuildwheel==2.16.*

            - name: Build wheels
              run: cd clairql_parser && python -m cibuildwheel --output-dir dist
              env:
                  MACOSX_DEPLOYMENT_TARGET: '12' # A modern target allows us to use C++20

            - uses: actions/upload-artifact@v3
              with:
                  path: |
                      clairql_parser/dist/*.whl
                      clairql_parser/dist/*.tar.gz
                  if-no-files-found: error

    publish:
        name: Publish on PyPI
        needs: build-wheels
        environment: pypi-clairql-parser
        permissions:
            id-token: write
        runs-on: ubuntu-22.04
        steps:
            - name: Fetch wheels
              uses: actions/download-artifact@v3
              with:
                  name: artifact
                  path: dist/

            - name: Publish package to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1

            - uses: actions/checkout@v4
              with:
                  token: ${{ secrets.API_TOKEN_GH }}
                  ref: ${{ github.event.pull_request.head.ref }}

            - name: Update clairql-parser in requirements
              shell: bash
              run: |
                  local=$(python clairql_parser/setup.py --version)
                  sed -i "s/clairql-parser==.*/clairql-parser==${local}/g" requirements.in
                  sed -i "s/clairql-parser==.*/clairql-parser==${local}/g" requirements.txt

            - uses: EndBug/add-and-commit@v9
              with:
                  add: '["requirements.in", "requirements.txt"]'
                  message: 'Use new clairql-parser version'
                  default_author: github_actions
                  github_token: ${{ secrets.API_TOKEN_GH }}
